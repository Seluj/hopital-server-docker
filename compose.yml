services:
  db:
    image: postgres:latest
    container_name: hopital-db
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db:/var/lib/postgresql/data
  api:
    image: registry.selutech.fr/hopital-api:latest
    container_name: hopital-api
    restart: always
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_URL
      - POSTGRES_PORT
      - APPLICATION_URL
      - MAIL_HOST
      - MAIL_PORT
      - MAIL_USER
      - MAIL_PASSWORD
      - KEY_STORE_PASSWORD
    volumes:
      - api:/app
    depends_on:
      - db
  web:
    image: registry.selutech.fr/hopital:${HOPITAL_VERSION:-latest}
    container_name: hopital-web
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - api
    networks:
      - default

  watchtower:
    image: containrrr/watchtower:1.7.1
    container_name: watchtower
    environment:
      WATCHTOWER_SCHEDULE: ${WATCHTOWER_SCHEDULE:-"0 0 4 * * *"}
      TZ: Europe/Paris
      WATCHTOWER_CLEANUP: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOME}/.docker/config.json:/config.json

volumes:
  db:
    name: hopital-db
  api:
    name: hopital-api